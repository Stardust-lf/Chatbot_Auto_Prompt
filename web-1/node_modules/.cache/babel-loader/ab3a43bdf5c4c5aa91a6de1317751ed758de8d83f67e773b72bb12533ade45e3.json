{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { ref } from 'vue'\nimport axios from 'axios';\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      input: 'hhhh',\n      messageList: []\n    };\n  },\n  methods: {\n    clearInput() {\n      this.input = '';\n    },\n    async getInput() {\n      try {\n        const response = await axios.post('/api/getAnswer', {\n          question: this.input\n        });\n        // 假设回答在response.data.answer中\n        this.messageList.push({\n          id: this.messageList.length + 1,\n          message: this.input,\n          answer: response.data.answer\n        });\n        // 清空输入框以便下一次输入\n        this.input = '';\n      } catch (error) {\n        console.error('API调用失败', error);\n        // 处理错误，例如显示错误消息\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","msg","String","data","input","messageList","methods","clearInput","getInput","response","post","question","push","id","length","message","answer","error","console"],"sources":["/Users/fanli/Git/Chatbot_Auto_Prompt/web-1/src/components/HelloWorld.vue"],"sourcesContent":["<template>\n  <div class=\"common-layout\">\n    <el-container>\n      <el-aside class=\"aside-with-image\" width=\"200px\"></el-aside>\n      <el-container>\n        <el-header class=\"header-with-image\" >Chatbot Auto Prompt</el-header>\n        <el-main>\n          <div class=\"mainContent\">\n            <el-scrollbar>\n              <div class=\"contentblock\"> \n                <div v-for=\"item in messageList\" :key=\"item.id\" class=\"message\">\n                  <p class=\"question\">问题: {{ item.message }}</p>\n                  <p class=\"answer\">回答: {{ item.answer }}</p>\n                </div>\n              </div>\n            </el-scrollbar>\n          </div>\n        </el-main>\n        <el-footer>\n          <el-input v-model=\"input\" style=\"width: 100%\" placeholder=\"Please input\">\n              <template #prepend>\n                <el-button  @click=\"clearInput\"><i class=\"custom-icon-clear\"></i></el-button>\n              </template>\n              <template #append>\n                <el-button  @click=\"getInput\" ><i class=\"custom-icon-send\"></i></el-button>\n              </template>\n            </el-input>\n          </el-footer>\n      </el-container>\n    </el-container>\n  </div>\n</template>\n\n<script>\n// import { ref } from 'vue'\nimport axios from 'axios';\n\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return{\n      input: 'hhhh',\n      messageList: [],\n    }\n  },\n  methods:{\n    clearInput(){\n      this.input='';\n    },\n    async getInput() {\n      try {\n        const response = await axios.post('/api/getAnswer', { question: this.input });\n        // 假设回答在response.data.answer中\n        this.messageList.push({\n          id: this.messageList.length + 1,\n          message: this.input,\n          answer: response.data.answer\n        });\n        // 清空输入框以便下一次输入\n        this.input = '';\n      } catch (error) {\n        console.error('API调用失败', error);\n        // 处理错误，例如显示错误消息\n      }\n    }\n  },\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\n\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n.mainContent{\n  display: flex;\n  flex-direction: column;\n  background-color: #FAFAFA;\n  width: 100%;\n  height: 100%;\n}\n.contentblock{\n  width: 95%;\n  height: 500px;\n}\n.custom-icon-send {\n  background-image: url(\"cil-send.svg\");\n  width: 25px;\n  background-size: cover;\n  background-position: center;\n  height: 20px;\n\n}\n.custom-icon-clear {\n  background-image: url(\"trash.svg\");\n  width: 25px;\n  background-size: cover;\n  background-position: center;\n  height: 20px;\n}\n.aside-with-image {\n  background-image: url(\"undraw_chat_bot_re_e2gj.svg\");\n  background-repeat: no-repeat;\n  background-position: center center;\n  background-size: contain;\n}\n.header-with-image {\n  font-weight: bold;\n  background-image: url(\"undraw_chat_re_re1u.svg\");\n  background-repeat: no-repeat;\n  background-position: 20px center;\n  background-size: contain;\n}\n\n.message {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end; /* 将消息气泡右对齐 */\n  margin-bottom: 10px;\n}\n\n.question {\n  background-color: #dcf8c6; /* 问题气泡的背景颜色 */\n  padding: 10px;\n  border-radius: 10px;\n  align-self: flex-start; /* 问题气泡左对齐 */\n}\n\n.answer {\n  background-color: #e5e5ea; /* 回答气泡的背景颜色 */\n  padding: 10px;\n  border-radius: 10px;\n  align-self: flex-end; /* 回答气泡右对齐 */\n}\n</style>\n"],"mappings":";AAkCA;AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAM;MACJC,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,UAAUA,CAAA,EAAE;MACV,IAAI,CAACH,KAAK,GAAC,EAAE;IACf,CAAC;IACD,MAAMI,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,gBAAgB,EAAE;UAAEC,QAAQ,EAAE,IAAI,CAACP;QAAM,CAAC,CAAC;QAC7E;QACA,IAAI,CAACC,WAAW,CAACO,IAAI,CAAC;UACpBC,EAAE,EAAE,IAAI,CAACR,WAAW,CAACS,MAAK,GAAI,CAAC;UAC/BC,OAAO,EAAE,IAAI,CAACX,KAAK;UACnBY,MAAM,EAAEP,QAAQ,CAACN,IAAI,CAACa;QACxB,CAAC,CAAC;QACF;QACA,IAAI,CAACZ,KAAI,GAAI,EAAE;MACjB,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/B;MACF;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}