{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n// import { ref } from 'vue'\nimport axios from 'axios';\nexport default {\n  name: 'HelloWorld',\n  props: {\n    msg: String\n  },\n  data() {\n    return {\n      input: 'hhhh',\n      messageList: []\n    };\n  },\n  methods: {\n    clearInput() {\n      this.input = '';\n    },\n    async getInput() {\n      try {\n        const response = await axios.post('/api/getAnswer', {\n          question: this.input\n        });\n        // 假设回答在response.data.answer中\n        this.messageList.push({\n          id: this.messageList.length + 1,\n          message: this.input,\n          answer: response.data.answer\n        });\n        // 清空输入框以便下一次输入\n        this.input = '';\n      } catch (error) {\n        console.error('API调用失败', error);\n        // 处理错误，例如显示错误消息\n      }\n    }\n  }\n};","map":{"version":3,"names":["axios","name","props","msg","String","data","input","messageList","methods","clearInput","getInput","response","post","question","push","id","length","message","answer","error","console"],"sources":["D:\\CITYU\\a_cityu_cs\\semester2\\cs6493NLP\\chatbot-github\\Chatbot_Auto_Prompt\\web-1\\src\\components\\HelloWorld.vue"],"sourcesContent":["<template>\r\n  <div class=\"common-layout\">\r\n    <el-container>\r\n      <el-aside width=\"200px\">Aside</el-aside>\r\n      <el-container>\r\n        <el-header>Chatbot Auto Prompt</el-header>\r\n        <el-main>\r\n          <div class=\"mainContent\">\r\n            <el-scrollbar>\r\n              <div class=\"contentblock\"> \r\n                <div v-for=\"item in messageList\" :key=\"item.id\">\r\n                  <p>问题: {{ item.message }}</p>\r\n                  <p>回答: {{ item.answer }}</p>\r\n                </div>\r\n              </div>\r\n            </el-scrollbar>\r\n          </div>\r\n        </el-main>\r\n        <el-footer>\r\n          <el-input v-model=\"input\" style=\"width: 100%\" placeholder=\"Please input\">\r\n              <template #prepend>\r\n                <el-button  @click=\"clearInput\">Clear<i class=\"custom-icon\"></i></el-button>\r\n              </template>\r\n              <template #append>\r\n                <el-button :icon=\"Search\" @click=\"getInput\" />\r\n              </template>\r\n            </el-input>\r\n          </el-footer>\r\n      </el-container>\r\n    </el-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import { ref } from 'vue'\r\nimport axios from 'axios';\r\n\r\nexport default {\r\n  name: 'HelloWorld',\r\n  props: {\r\n    msg: String\r\n  },\r\n  data() {\r\n    return{\r\n      input: 'hhhh',\r\n      messageList: [],\r\n    }\r\n  },\r\n  methods:{\r\n    clearInput(){\r\n      this.input='';\r\n    },\r\n    async getInput() {\r\n      try {\r\n        const response = await axios.post('/api/getAnswer', { question: this.input });\r\n        // 假设回答在response.data.answer中\r\n        this.messageList.push({\r\n          id: this.messageList.length + 1,\r\n          message: this.input,\r\n          answer: response.data.answer\r\n        });\r\n        // 清空输入框以便下一次输入\r\n        this.input = '';\r\n      } catch (error) {\r\n        console.error('API调用失败', error);\r\n        // 处理错误，例如显示错误消息\r\n      }\r\n    }\r\n  },\r\n}\r\n</script>\r\n\r\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\r\n<style scoped>\r\n.custom-icon {\r\n  background-image: url(\"logo.png\");\r\n  width:50px;\r\n  height: 50px;\r\n  /* 其他样式属性 */\r\n}\r\nh3 {\r\n  margin: 40px 0 0;\r\n}\r\nul {\r\n  list-style-type: none;\r\n  padding: 0;\r\n}\r\nli {\r\n  display: inline-block;\r\n  margin: 0 10px;\r\n}\r\na {\r\n  color: #42b983;\r\n}\r\n.mainContent{\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #FAFAFA;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.contentblock{\r\n  width:500px;\r\n  height: 500px;\r\n}\r\n</style>\r\n"],"mappings":";AAkCA;AACA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,YAAY;EAClBC,KAAK,EAAE;IACLC,GAAG,EAAEC;EACP,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAM;MACJC,KAAK,EAAE,MAAM;MACbC,WAAW,EAAE;IACf;EACF,CAAC;EACDC,OAAO,EAAC;IACNC,UAAUA,CAAA,EAAE;MACV,IAAI,CAACH,KAAK,GAAC,EAAE;IACf,CAAC;IACD,MAAMI,QAAQA,CAAA,EAAG;MACf,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMX,KAAK,CAACY,IAAI,CAAC,gBAAgB,EAAE;UAAEC,QAAQ,EAAE,IAAI,CAACP;QAAM,CAAC,CAAC;QAC7E;QACA,IAAI,CAACC,WAAW,CAACO,IAAI,CAAC;UACpBC,EAAE,EAAE,IAAI,CAACR,WAAW,CAACS,MAAK,GAAI,CAAC;UAC/BC,OAAO,EAAE,IAAI,CAACX,KAAK;UACnBY,MAAM,EAAEP,QAAQ,CAACN,IAAI,CAACa;QACxB,CAAC,CAAC;QACF;QACA,IAAI,CAACZ,KAAI,GAAI,EAAE;MACjB,EAAE,OAAOa,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,SAAS,EAAEA,KAAK,CAAC;QAC/B;MACF;IACF;EACF;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}